{"ast":null,"code":"var _jsxFileName = \"C:\\\\Learning\\\\amazon-cognito-identity-management-workshop\\\\website\\\\src\\\\pages\\\\Profile.js\";\n\n/*\r\n *   Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n\r\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\r\n *  You may not use this file except in compliance with the License.\r\n *  A copy of the License is located at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n *  or in the \"license\" file accompanying this file. This file is distributed\r\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\r\n *  express or implied. See the License for the specific language governing\r\n *  permissions and limitations under the License.\r\n */\nimport React, { useState, useEffect } from 'react';\nimport SiteNav from '../components/SiteNav';\nimport SiteFooter from '../components/SiteFooter';\nimport { Auth } from 'aws-amplify';\nimport { S3Image } from 'aws-amplify-react';\nimport '../css/main.css';\nimport listUsers from './listUsers';\nimport MUIDataTable from 'mui-datatables';\n\nconst AWS = require('aws-sdk'); // AWS.config.update({region:'us-east-1'});\n// var myConfig = new AWS.Config({\n//   credentials: myCredentials, region: 'us-east-1'\n// });\n// var myCredentials = new AWS.CognitoIdentityCredentials({\n//     IdentityPoolId:'us-east-1:98d665d1-adfe-4f34-a3d9-1842d1c30ead'\n// });\n// AWS.config = myConfig\n\n\nAWS.config.update({\n  region: 'us-east-1',\n  'accessKeyId': 'AKIAXJPGEEDHGTRSHOKC',\n  'secretAccessKey': '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'\n});\nvar cognito = new AWS.CognitoIdentityServiceProvider();\nconst options = {\n  filter: false,\n  search: false,\n  viewColumns: false,\n  print: false,\n  download: false,\n  filterType: 'dropdown',\n  responsive: 'stacked',\n  resizableColumns: false,\n  rowsPerPageOptions: [15, 30, 50],\n  rowsPerPage: 15,\n  selectableRows: 'none'\n};\nconst columns = [{\n  name: 'Username',\n  label: 'Username',\n  options: {\n    filter: true\n  }\n}, {\n  name: 'UserStatus',\n  label: 'UserStatus',\n  options: {\n    filter: true\n  }\n}, {\n  name: 'UserLastModifiedDate',\n  options: {\n    filter: false,\n    sort: false,\n    empty: true,\n    customBodyRender: (value, tableMeta, updateValue) => {\n      let row = tableMeta.rowIndex;\n      console.log(\"ok\");\n      console.log(value); // console.log(tableMeta.tableData[row][2])\n\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 19\n        }\n      }, value.toDateString());\n    }\n  }\n} // {\n//   name: 'Enabled',\n//   label: 'Enabled',\n//   options: {\n//     filter: true,\n//   },\n// },\n];\n\nclass Profile extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.list = async () => {\n      console.log(\"list user method\");\n      const params = {\n        UserPoolId: 'us-east-1_NBUlVCEwF',\n        AttributesToGet: [],\n        Filter: '',\n        Limit: 10\n      };\n      cognito.listUsers(params, (err, data) => {\n        if (err) {\n          console.log(err);\n        } else {\n          console.log(\"data\", data);\n          this.setState({\n            // userdata: [{Username:'hello',UserStatus: \"CONFIRMED\"}]\n            // userdata:JSON.parse(JSON.stringify(data))\n            userdata: data.Users\n          });\n        }\n      });\n    };\n\n    console.log(\"props\");\n    console.log(props);\n    this.state = {\n      user: {\n        attributes: {\n          email: 'me@example.com',\n          phone_number: '+1123456789'\n        }\n      },\n      date: new Date(),\n      userdata: []\n    };\n  }\n\n  componentDidMount() {\n    this.list();\n    Auth.currentAuthenticatedUser().then(user => {\n      console.log('Cognito User', user);\n      this.setState({\n        user,\n        image_key: 'profile-' + user.attributes.sub + '.jpg'\n      });\n    });\n    ;\n  }\n\n  async onImageLoad(url) {\n    console.error('onImageLoad is not yet implemented');\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"page-unicorns\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"site-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 14\n      }\n    }, \"E-mail:\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 14\n      }\n    }, this.state.user.attributes.email)), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 14\n      }\n    }, this.state.date.toLocaleTimeString(), \":\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 14\n      }\n    }, this.state.user.attributes.phone_number)))), /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(MUIDataTable, {\n      id: \"externalTable\",\n      data: this.state.userdata // data={[{name:'hello',email:'hai'},{name:'ok',email:'he'}]}\n      ,\n      \"data-testid\": \"externalTable\",\n      columns: columns,\n      options: options,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 7\n      }\n    }))), /*#__PURE__*/React.createElement(SiteNav, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(SiteFooter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default Profile;","map":{"version":3,"sources":["C:/Learning/amazon-cognito-identity-management-workshop/website/src/pages/Profile.js"],"names":["React","useState","useEffect","SiteNav","SiteFooter","Auth","S3Image","listUsers","MUIDataTable","AWS","require","config","update","region","cognito","CognitoIdentityServiceProvider","options","filter","search","viewColumns","print","download","filterType","responsive","resizableColumns","rowsPerPageOptions","rowsPerPage","selectableRows","columns","name","label","sort","empty","customBodyRender","value","tableMeta","updateValue","row","rowIndex","console","log","toDateString","Profile","Component","constructor","props","list","params","UserPoolId","AttributesToGet","Filter","Limit","err","data","setState","userdata","Users","state","user","attributes","email","phone_number","date","Date","componentDidMount","currentAuthenticatedUser","then","image_key","sub","onImageLoad","url","error","render","toLocaleTimeString"],"mappings":"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","sourcesContent":["/*\r\n *   Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n\r\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\r\n *  You may not use this file except in compliance with the License.\r\n *  A copy of the License is located at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n *  or in the \"license\" file accompanying this file. This file is distributed\r\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\r\n *  express or implied. See the License for the specific language governing\r\n *  permissions and limitations under the License.\r\n */\r\n\r\nimport React, { useState, useEffect } from 'react'\r\nimport SiteNav from '../components/SiteNav';\r\nimport SiteFooter from '../components/SiteFooter';\r\nimport { Auth } from 'aws-amplify';\r\nimport { S3Image } from 'aws-amplify-react';\r\nimport '../css/main.css';\r\nimport listUsers from './listUsers';\r\nimport MUIDataTable from 'mui-datatables'\r\nconst AWS = require('aws-sdk');\r\n\r\n// AWS.config.update({region:'us-east-1'});\r\n// var myConfig = new AWS.Config({\r\n//   credentials: myCredentials, region: 'us-east-1'\r\n// });\r\n// var myCredentials = new AWS.CognitoIdentityCredentials({\r\n//     IdentityPoolId:'us-east-1:98d665d1-adfe-4f34-a3d9-1842d1c30ead'\r\n// });\r\n// AWS.config = myConfig\r\nAWS.config.update({ region: 'us-east-1', 'accessKeyId': 'AKIAXJPGEEDHGTRSHOKC', 'secretAccessKey': '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' });\r\nvar cognito = new AWS.CognitoIdentityServiceProvider();\r\n\r\nconst options = {\r\n  filter: false,\r\n  search: false,\r\n  viewColumns: false,\r\n  print: false,\r\n  download: false,\r\n  filterType: 'dropdown',\r\n  responsive: 'stacked',\r\n  resizableColumns: false,\r\n  rowsPerPageOptions: [15, 30, 50],\r\n  rowsPerPage: 15,\r\n  selectableRows: 'none',\r\n}\r\n\r\nconst columns = [\r\n  \r\n    {\r\n      name: 'Username',\r\n      label: 'Username',\r\n      options: {\r\n        filter: true,\r\n      },\r\n    },\r\n    {\r\n      name: 'UserStatus',\r\n      label: 'UserStatus',\r\n      options: {\r\n        filter: true,\r\n      },\r\n    },\r\n   \r\n    {\r\n    name: 'UserLastModifiedDate',\r\n      options: {\r\n        filter: false,\r\n        sort: false,\r\n        empty: true,\r\n        customBodyRender: (value, tableMeta, updateValue) => {\r\n         \r\n          let row=tableMeta.rowIndex\r\n          console.log(\"ok\")\r\n          console.log(value)\r\n          // console.log(tableMeta.tableData[row][2])\r\n          return (<p>{value.toDateString()}</p>)\r\n        }\r\n      }\r\n    }\r\n    // {\r\n    //   name: 'Enabled',\r\n    //   label: 'Enabled',\r\n    //   options: {\r\n    //     filter: true,\r\n    //   },\r\n    // },\r\n  \r\n]\r\nclass Profile extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\"props\")\r\n        console.log(props)\r\n        this.state = {\r\n            user: {\r\n                attributes: {\r\n                    email: 'me@example.com',\r\n                    phone_number: '+1123456789'\r\n                }\r\n            },\r\n            date: new Date(),\r\n            userdata:[]\r\n        }\r\n    }\r\n    \r\n\r\n     list = async () => {\r\n          \r\n      console.log(\"list user method\")\r\n      const params = {\r\n        UserPoolId: 'us-east-1_NBUlVCEwF',\r\n        AttributesToGet: [],\r\n        Filter: '',\r\n        Limit: 10,\r\n    };\r\n    \r\n\r\n    cognito.listUsers(params, (err, data) => {\r\n      if (err) {\r\n          console.log(err);\r\n          \r\n      }\r\n      else {\r\n          console.log(\"data\", data);\r\n          this.setState({\r\n           // userdata: [{Username:'hello',UserStatus: \"CONFIRMED\"}]\r\n          // userdata:JSON.parse(JSON.stringify(data))\r\n          userdata:data.Users\r\n          });\r\n          \r\n      }\r\n  }) \r\n        \r\n    }\r\n    componentDidMount() {\r\n        this.list()\r\n        Auth.currentAuthenticatedUser().then(user => {\r\n            console.log('Cognito User', user);\r\n            this.setState({user, image_key: 'profile-' + user.attributes.sub + '.jpg'});\r\n        });;\r\n        \r\n\r\n    }\r\n\r\n    async onImageLoad(url) {\r\n        console.error('onImageLoad is not yet implemented');\r\n    }\r\n\r\n    render() {\r\n      return (\r\n      <div className=\"page-unicorns\">\r\n        <header className=\"site-header\">\r\n          <div>\r\n            \r\n          {/* <S3Image imgKey={this.state.image_key} onLoad={(url) => this.onImageLoad(url)} picker/> */}\r\n    \t\t<table align=\"center\">\r\n    \t\t<tbody>\r\n             <tr>\r\n             <td>E-mail:</td>\r\n             <td>{this.state.user.attributes.email}</td>\r\n             </tr>\r\n              <tr>\r\n             <td>{this.state.date.toLocaleTimeString()}:</td>\r\n             <td>{this.state.user.attributes.phone_number}</td>\r\n             </tr>\r\n             </tbody>\r\n            </table>\r\n            <React.Fragment>\r\n      <MUIDataTable\r\n              id='externalTable'\r\n              data={this.state.userdata}\r\n              // data={[{name:'hello',email:'hai'},{name:'ok',email:'he'}]}\r\n              data-testid='externalTable'\r\n              columns={columns}\r\n              options={options}\r\n        />\r\n      </React.Fragment>\r\n    \t</div>\r\n          <SiteNav/>\r\n        </header>\r\n        \r\n        <SiteFooter/>\r\n        \r\n     \r\n      \r\n      </div>\r\n     \r\n    );\r\n  }\r\n \r\n}\r\n\r\nexport default Profile;\r\n"]},"metadata":{},"sourceType":"module"}