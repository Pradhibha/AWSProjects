{"ast":null,"code":"const AWS = require('aws-sdk');\n\nconst cognitoIdentityServiceProvider = new AWS.CognitoIdentityServiceProvider();\n\nconst _ = require('underscore');\n\nconst lib = 'listUsers';\n\nfunction listUsers(limit, paginationToken) {\n  let params = {\n    UserPoolId: 'us-east-1_NBUlVCEwF',\n    AttributesToGet: [],\n    Filter: ''\n  };\n\n  if (limit) {\n    params.Limit = limit;\n  }\n\n  if (paginationToken) {\n    params.PaginationToken = paginationToken;\n  }\n\n  console.log('listUsers: params:', params);\n  return cognitoIdentityServiceProvider.listUsers(params).promise().then(data => {\n    data.Users = data.Users.map(user => {\n      let _user = {\n        user_id: user.Username,\n        name: '',\n        email: '',\n        enabled: user.Enabled,\n        status: user.UserStatus\n      };\n\n      const _nm = _.where(user.Attributes, {\n        Name: 'nickname'\n      });\n\n      const _em = _.where(user.Attributes, {\n        Name: 'email'\n      });\n\n      if (_nm.length > 0) {\n        _user.name = _nm[0].Value;\n      }\n\n      if (_em.length > 0) {\n        _user.email = _em[0].Value;\n      }\n\n      return _user;\n    });\n    return data;\n  });\n}\n\nmodule.exports = function (event, context) {\n  return listUsers(event.limit, event.paginationToken);\n};","map":{"version":3,"sources":["C:/Learning/amazon-cognito-identity-management-workshop/website/src/pages/listUsers.js"],"names":["AWS","require","cognitoIdentityServiceProvider","CognitoIdentityServiceProvider","_","lib","listUsers","limit","paginationToken","params","UserPoolId","AttributesToGet","Filter","Limit","PaginationToken","console","log","promise","then","data","Users","map","user","_user","user_id","Username","name","email","enabled","Enabled","status","UserStatus","_nm","where","Attributes","Name","_em","length","Value","module","exports","event","context"],"mappings":"AAAA,MAAMA,GAAG,GAAGC,OAAO,CAAC,SAAD,CAAnB;;AACA,MAAMC,8BAA8B,GAAG,IAAIF,GAAG,CAACG,8BAAR,EAAvC;;AACA,MAAMC,CAAC,GAAGH,OAAO,CAAC,YAAD,CAAjB;;AAEA,MAAMI,GAAG,GAAG,WAAZ;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0BC,eAA1B,EAA2C;AACvC,MAAIC,MAAM,GAAG;AACTC,IAAAA,UAAU,EAAE,qBADH;AAETC,IAAAA,eAAe,EAAE,EAFR;AAGTC,IAAAA,MAAM,EAAE;AAHC,GAAb;;AAMA,MAAIL,KAAJ,EAAW;AACPE,IAAAA,MAAM,CAACI,KAAP,GAAeN,KAAf;AACH;;AACD,MAAIC,eAAJ,EAAqB;AACjBC,IAAAA,MAAM,CAACK,eAAP,GAAyBN,eAAzB;AACH;;AAEDO,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCP,MAAlC;AAEA,SAAOP,8BAA8B,CAACI,SAA/B,CAAyCG,MAAzC,EAAiDQ,OAAjD,GAA2DC,IAA3D,CAAgEC,IAAI,IAAI;AAC3EA,IAAAA,IAAI,CAACC,KAAL,GAAaD,IAAI,CAACC,KAAL,CAAWC,GAAX,CAAeC,IAAI,IAAI;AAChC,UAAIC,KAAK,GAAG;AACRC,QAAAA,OAAO,EAAEF,IAAI,CAACG,QADN;AAERC,QAAAA,IAAI,EAAE,EAFE;AAGRC,QAAAA,KAAK,EAAE,EAHC;AAIRC,QAAAA,OAAO,EAAEN,IAAI,CAACO,OAJN;AAKRC,QAAAA,MAAM,EAAER,IAAI,CAACS;AALL,OAAZ;;AAQA,YAAMC,GAAG,GAAG5B,CAAC,CAAC6B,KAAF,CAAQX,IAAI,CAACY,UAAb,EAAyB;AACjCC,QAAAA,IAAI,EAAE;AAD2B,OAAzB,CAAZ;;AAIA,YAAMC,GAAG,GAAGhC,CAAC,CAAC6B,KAAF,CAAQX,IAAI,CAACY,UAAb,EAAyB;AACjCC,QAAAA,IAAI,EAAE;AAD2B,OAAzB,CAAZ;;AAIA,UAAIH,GAAG,CAACK,MAAJ,GAAa,CAAjB,EAAoB;AAChBd,QAAAA,KAAK,CAACG,IAAN,GAAaM,GAAG,CAAC,CAAD,CAAH,CAAOM,KAApB;AACH;;AAED,UAAIF,GAAG,CAACC,MAAJ,GAAa,CAAjB,EAAoB;AAChBd,QAAAA,KAAK,CAACI,KAAN,GAAcS,GAAG,CAAC,CAAD,CAAH,CAAOE,KAArB;AACH;;AAED,aAAOf,KAAP;AACH,KA1BY,CAAb;AA4BA,WAAOJ,IAAP;AACH,GA9BM,CAAP;AA+BH;;AAEDoB,MAAM,CAACC,OAAP,GAAiB,UAAUC,KAAV,EAAiBC,OAAjB,EAA0B;AACvC,SAAOpC,SAAS,CAACmC,KAAK,CAAClC,KAAP,EAAckC,KAAK,CAACjC,eAApB,CAAhB;AACH,CAFD","sourcesContent":["const AWS = require('aws-sdk');\r\nconst cognitoIdentityServiceProvider = new AWS.CognitoIdentityServiceProvider();\r\nconst _ = require('underscore');\r\n\r\nconst lib = 'listUsers';\r\n\r\nfunction listUsers(limit, paginationToken) {\r\n    let params = {\r\n        UserPoolId: 'us-east-1_NBUlVCEwF',\r\n        AttributesToGet: [],\r\n        Filter: ''\r\n    };\r\n\r\n    if (limit) {\r\n        params.Limit = limit;\r\n    }\r\n    if (paginationToken) {\r\n        params.PaginationToken = paginationToken;\r\n    }\r\n\r\n    console.log('listUsers: params:', params);\r\n\r\n    return cognitoIdentityServiceProvider.listUsers(params).promise().then(data => {\r\n        data.Users = data.Users.map(user => {\r\n            let _user = {\r\n                user_id: user.Username,\r\n                name: '',\r\n                email: '',\r\n                enabled: user.Enabled,\r\n                status: user.UserStatus\r\n            };\r\n\r\n            const _nm = _.where(user.Attributes, {\r\n                Name: 'nickname'\r\n            });\r\n\r\n            const _em = _.where(user.Attributes, {\r\n                Name: 'email'\r\n            });\r\n\r\n            if (_nm.length > 0) {\r\n                _user.name = _nm[0].Value;\r\n            }\r\n\r\n            if (_em.length > 0) {\r\n                _user.email = _em[0].Value;\r\n            }\r\n\r\n            return _user;\r\n        });\r\n\r\n        return data;\r\n    });\r\n}\r\n\r\nmodule.exports = function (event, context) {\r\n    return listUsers(event.limit, event.paginationToken);\r\n};"]},"metadata":{},"sourceType":"module"}